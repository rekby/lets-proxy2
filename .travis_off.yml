dist: focal
addons:
  apt:
    packages:
      - dos2unix

env:
  jobs:
    - GO_VERSION=1.10
    - GO_VERSION=1.16

services:
  - docker

install:
  - eval "$(curl -sL https://raw.githubusercontent.com/travis-ci/gimme/master/gimme | GIMME_GO_VERSION=$GO_VERSION bash)"
  - go version

script:
  - test -n "$TRAVIS_TAG" || bash ./tests/test.sh

after_script:
  # Install and upload test coverage must not failure for test build
  - test -n "$TRAVIS_TAG" || go get golang.org/x/tools/cmd/cover
  - test -n "$TRAVIS_TAG" || go get github.com/mattn/goveralls
  - test -n "$TRAVIS_TAG" || COVERALLS_PARALLEL=true goveralls -coverprofile=coverage.out -service=travis-ci -repotoken $COVERALLS_TOKEN

before_deploy:
  - git config --local user.name "$GIT_NAME"
  - git config --local user.email "$GIT_EMAIL"
  - BUILD_TIME=$(TZ=UTC date --rfc-3339=seconds)
  - go get github.com/mitchellh/gox
  - mkdir -p output
  - OUTPUT="$PWD/output"
  - mkdir -p $GOPATH/src/github.com/rekby
  - ln -s "$PWD" "$GOPATH/src/github.com/rekby/lets-proxy2"
  - cd "$GOPATH/src/github.com/rekby/lets-proxy2"
  - OS_ARCH_BUILDS="linux/386 linux/amd64 linux/arm freebsd/386 freebsd/amd64 freebsd/arm windows/386 windows/amd64"
  - test "$GO_VERSION" = "1.10" || OS_ARCH_BUILDS="$OS_ARCH_BUILDS darwin/amd64"
  - GO111MODULE=on CGO_ENABLED=0 gox --mod=vendor -osarch "$OS_ARCH_BUILDS" --ldflags "-X \"main.VERSION=$TRAVIS_TAG+build-$TRAVIS_BUILD_NUMBER, Build time $BUILD_TIME, commit $TRAVIS_COMMIT, $GO_VERSION\"" --output="$OUTPUT/lets-proxy_{{.OS}}_{{.Arch}}" -verbose --rebuild ./cmd/
  - bash tests/make_archives.sh

deploy:
  skip_cleanup: true
  provider: releases
  on:
    repo: rekby/lets-proxy2
    tags: true
  api_key: $GITHUB_TOKEN
  file_glob: true
  file: output/*

notifications:
  webhooks:
    urls:
      - https://coveralls.io/webhook?repo_token=$COVERALLS_TOKEN
    if: env(tags) IS blank
